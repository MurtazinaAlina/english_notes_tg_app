"""
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä.
"""
from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, KeyboardBuilder

from app.database.models import WordPhrase
from app.settings import REVERSO_URL


# –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–ª–∞—Å—Å—ã CallbackData –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å CallbackData, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º callback_query, —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞
class MenuCallBack(CallbackData, prefix='menu'):
    """
    –ö–ª–∞—Å—Å CallbackData –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query-—Å–æ–±—ã—Ç–∏–π.

    –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å 'menu', –Ω–∞ –≤—ã—Ö–æ–¥–µ –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–µ—Ç callback_data –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
    "menu:<level>:<menu_name>:<menu_details>:<page>", –Ω–∞–ø—Ä–∏–º–µ—Ä: "menu:1:vocabulary::1"
    """
    level: int                              # –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω—é (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥" –∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é")
    menu_name: str                          # –ò–º—è –º–µ–Ω—é, –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤–µ—Ç–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏
    menu_details: str | None = None         # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –≤–µ—Ç–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏
    page: int = 1                           # –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å CallbackData, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–æ–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
class VocabularyCallBack(CallbackData, prefix='vcb'):
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å CallbackData, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–æ–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π.

    –ü—Ä–∏–¥–∞–µ—Ç—Å—è –ø—Ä–µ—Ñ–∏–∫—Å 'vcb', –Ω–∞ –≤—ã—Ö–æ–¥–µ –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–µ—Ç callback_data –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
    "vcb:<menu_details>:<page>", –Ω–∞–ø—Ä–∏–º–µ—Ä: "vcb:edit_or_delete_topic:2"
    """
    menu_name: str | None = None
    page: int = 1


# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä

# –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)
def create_keyboard_with_header(level, menu_name: str | None = None, custom_step_back: str | None = None) \
        -> InlineKeyboardBuilder:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)

    :param level: –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é
    :param menu_name: –ò–º—è –º–µ–Ω—é –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è MenuCallBack-–æ–±—ä–µ–∫—Ç–∞ –≤ callback_data
    :param custom_step_back: –î–∞–Ω–Ω—ã–µ callback_data= –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π MenuCallBack)
    :return: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã InlineKeyboardBuilder
    """
    keyboard = InlineKeyboardBuilder()                              # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add(InlineKeyboardButton(                              # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
        text='–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†', callback_data=MenuCallBack(level=0, menu_name='start_page').pack()
    ))
    if level > 1:

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ callback_data= –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"
        callback_data = custom_step_back if custom_step_back else MenuCallBack(
            level=level - 1, menu_name=menu_name, menu_details='step_back').pack()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"
        keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=callback_data))

    return keyboard


# –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∫–Ω–æ–ø–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
def add_pagination_btns(
        keyboard: InlineKeyboardBuilder,
        pagination_btns: dict,
        callback_data_next: str | CallbackData,
        callback_data_previous: str | CallbackData) \
        -> InlineKeyboardBuilder | KeyboardBuilder[InlineKeyboardButton]:
    """
    –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ InlineKeyboardBuilder –∫–Ω–æ–ø–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

    :param keyboard: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã InlineKeyboardBuilder
    :param pagination_btns: –°–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ {'—Ç–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏': '–∑–Ω–∞—á–µ–Ω–∏–µ(next/previous)'}
                            (—É–∂–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¢–û–õ–¨–ö–û –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏/–∫–Ω–æ–ø–∫—É, —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –î–û)
    :param callback_data_next: –î–∞–Ω–Ω—ã–µ callback_data= –¥–ª—è –∫–Ω–æ–ø–∫–∏ next
    :param callback_data_previous: –î–∞–Ω–Ω—ã–µ callback_data= –¥–ª—è –∫–Ω–æ–ø–∫–∏ previous
    :returns: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã KeyboardBuilder —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    """

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É-–º–∞—Å—Å–∏–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    row = []

    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–∞—Å—Å–∏–≤
    for text, val in pagination_btns.items():
        if val == 'next':
            row.append(InlineKeyboardButton(text=text, callback_data=callback_data_next))           # –ò–¥–µ—Ç –í–¢–û–†–û–ô
        elif val == 'previous':
            row.append(InlineKeyboardButton(text=text, callback_data=callback_data_previous))       # –ò–¥–µ—Ç –ü–ï–†–í–û–ô

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∏–≤—à–∏–π—Å—è –º–∞—Å—Å–∏–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –û–Ω–∏ —Ä–∞—Å–ø–∞–∫—É—é—Ç—Å—è –≤ –æ–¥–∏–Ω —Ä—è–¥.
    return keyboard.row(*row)


# –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
def add_separate_line_with_btns(keyboard: InlineKeyboardBuilder, btns: dict[str, str]) \
        -> KeyboardBuilder[InlineKeyboardButton]:
    """
    –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ btns.

    :param keyboard: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã InlineKeyboardBuilder
    :param btns: –°–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ä–º–∞—Ç–∞ {'—Ç–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏': 'callback_data'}
    :returns: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã KeyboardBuilder —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    """

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É-–º–∞—Å—Å–∏–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    row = list()

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–∞—Å—Å–∏–≤
    for text, callback_data in btns.items():
        row.append(InlineKeyboardButton(text=text, callback_data=callback_data))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.row(*row)

###################################################################################################

# –°–û–ó–î–ê–ù–ò–ï –ö–õ–ê–í–ò–ê–¢–£–†


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∫–Ω–æ–ø–∫–∞–º –∏ —Ä–∞–∑–º–µ—Ç–∫–µ
def get_inline_btns(
        *,
        btns: dict[str, str],
        sizes: tuple[int, ...] = (2, ),
) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∫–Ω–æ–ø–∫–∞–º –∏ —Ä–∞–∑–º–µ—Ç–∫–µ.
    –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ —Å callback_data, —Å—Å—ã–ª–∫–∞–º–∏ –∏ switch_inline_query_current_chat:

    - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é value –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç callback_data.
    - –ü—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ http-—à–∞–±–ª–æ–Ω–∞ '://' - value –ø—Ä–∏—Å–≤–æ–∏—Ç url.
    - –ï—Å–ª–∏ value –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'switch_inline_query_current_chat_' - —Ç–æ –∑–∞–º–µ–Ω–∏—Ç —ç—Ç—É —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ –Ω–∞ '' –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç value
      switch_inline_query_current_chat.

    :param btns: –°–ª–æ–≤–∞—Ä—å —Å –Ω—É–∂–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏, —Ñ–æ—Ä–º–∞—Ç–∞
                {'—Ç–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏': 'value (callback_data / url-—Å—Å—ã–ª–∫–∞ / switch_inline_query_current_chat), ...'}
    :param sizes: –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, –∫–æ—Ä—Ç–µ–∂ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
    :return: –ì–æ—Ç–æ–≤–∞—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    for text, value in btns.items():
        if '://' in value:
            keyboard.add(InlineKeyboardButton(text=text, url=value))
        elif value.startswith('switch_inline_query_current_chat_'):
            keyboard.add(InlineKeyboardButton(
                text=text, switch_inline_query_current_chat=value.replace('switch_inline_query_current_chat_', ''))
            )
        else:
            keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Ä–∞–∑–º–µ—Ä—ã
    return keyboard.adjust(*sizes).as_markup()


# –ú–µ–Ω—é —É—Ä–æ–≤–Ω—è 0, –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã start_page
def get_kbds_start_page_btns(
        *,
        username: str | None = None,
        sizes: tuple[int, ...] = (1, 1, 2, 2, 1)
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã start_page. –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é + –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

    :param username: Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ø—Ä–∏ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ None
    :param sizes: –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, –∫–æ—Ä—Ç–µ–∂ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
    :return: –ì–æ—Ç–æ–≤–∞—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
    btns = {
        "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ —Å–ª–æ–≤–∞—Ä—å ‚ûï": 'add_new_word',
        "–°–ª–æ–≤–∞—Ä—å & –ó–∞–º–µ—Ç–∫–∏ üìö": MenuCallBack(level=1, menu_name='vocabulary').pack(),
        "–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ üéô": MenuCallBack(level=1, menu_name='speaking').pack(),
        "–¢–µ—Å—Ç—ã üéì": MenuCallBack(level=1, menu_name='tests').pack(),
        "AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç üí°": MenuCallBack(level=1, menu_name='giga').pack(),
        "Reverso üåê": REVERSO_URL,
    }
    keyboard = InlineKeyboardBuilder()
    for text, value in btns.items():
        if '://' in value:
            keyboard.add(InlineKeyboardButton(text=text, url=value))
        else:
            keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    keyboard.adjust(*sizes)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–æ—Å—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:
    if not username:                                             # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        btns = {
            "Sign in üë§": MenuCallBack(level=1, menu_name='auth', menu_details='sign_in_app').pack(),
            "Log in üë§": MenuCallBack(level=1, menu_name='auth', menu_details='log_in_app').pack()
        }
        keyboard = add_separate_line_with_btns(keyboard, btns)

    else:                                                       # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        keyboard.add(InlineKeyboardButton(
            text=f'{username} üë§',
            callback_data=MenuCallBack(level=1, menu_name='auth', menu_details='user_profile').pack())
        )
        keyboard.adjust(*sizes)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
def get_auth_btns(
        sizes: tuple[int, ...] = (1, ),
        profile: bool = False,
        login: bool = False
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ä—Ç–µ–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    :param profile: –§–ª–∞–≥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è (–ø—Ä–∏ True). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    :param login: –§–ª–∞–≥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è (–ø—Ä–∏ True). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†"
    keyboard = create_keyboard_with_header(level=1)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è (–ø—Ä–∏ —Ñ–ª–∞–≥–µ profile=True)
    if profile:
        keyboard.add(InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–∞–Ω–Ω—ã–µ üìä', callback_data='statistic_page_1'))
        keyboard.add(InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ ‚öô', callback_data='user_settings'))
        keyboard.add(InlineKeyboardButton(text='–í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è ‚û°Ô∏è', callback_data='log_out_ask_confirm'))
    else:

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è (–ø—Ä–∏ —Ñ–ª–∞–≥–µ login=True)
        if login:
            keyboard.add(InlineKeyboardButton(text='–ó–∞–±—ã–ª –ø–∞—Ä–æ–ª—å', callback_data='reset_password'))

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è (–¥–ª—è –æ—Ç–∫–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        keyboard.add(InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data='cancel_auth'))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.adjust(*sizes).as_markup()


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ö–µ–¥–µ—Ä–æ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–¥–æ–º–æ–π, –Ω–∞–∑–∞–¥). –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏ —Ä–∞–∑–º–µ—Ç–∫–µ.
def get_kbds_with_navi_header_btns(
        *,
        level: int,
        btns: dict,
        menu_name: str = 'vocabulary',
        sizes: tuple[int, ...] = (1, ),
        custom_step_back: str | None = None
) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ö–µ–¥–µ—Ä–æ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–¥–æ–º–æ–π, –Ω–∞–∑–∞–¥). –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏ —Ä–∞–∑–º–µ—Ç–∫–µ.

    :param level: –£—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" –µ—Å–ª–∏ level > 1)
    :param btns: –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å, —Ñ–æ—Ä–º–∞—Ç–∞ {—Ç–µ–∫—Å—Ç: callback_data, ...}
    :param menu_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data MenuCallBack –≤ –∫–Ω–æ–ø–∫–µ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ä—Ç–µ–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    :param custom_step_back: –î–∞–Ω–Ω—ã–µ callback_data= –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π MenuCallBack)
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)
    keyboard = create_keyboard_with_header(level=level, menu_name=menu_name, custom_step_back=custom_step_back)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—é
    for text, value in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    keyboard.adjust(*sizes)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã (–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è).
# –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏, –≤—ã–±–æ—Ä–µ —Ä–∞–∑–¥–µ–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
def get_kbds_with_topic_btns(
        *,
        level: int,
        btns: dict,
        page: int,
        pagination_btns: dict,
        menu_name: str,
        menu_details: str,
        cancel_possible: bool = False,              # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
        cancel_page_address: str = None,            # –î–∞–Ω–Ω—ã–µ callback_data –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è
        search_possible: bool = False,              # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
        search_cancel: bool = False,                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –ø–æ–∏—Å–∫–∞
        sizes: tuple[int, ...] = (1, 2)
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã (–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è).

    –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏, –≤—ã–±–æ—Ä–µ —Ä–∞–∑–¥–µ–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ.
    –ü—Ä–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ–ª–∞–≥–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö.

    :param level: –£—Ä–æ–≤–µ–Ω—å –≥–ª—É–±–∏–Ω—ã –º–µ–Ω—é (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
    :param btns: –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–µ–º (—Å—Ä–µ–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã + –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–æ–ø—É—Å–∫)
    :param page: –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    :param pagination_btns: –°–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ {'—Ç–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏': '–∑–Ω–∞—á–µ–Ω–∏–µ(next/previous)'}
                            (—É–∂–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¢–û–õ–¨–ö–û –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏/–∫–Ω–æ–ø–∫—É, —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –î–û)
    :param menu_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data MenuCallBack)
    :param menu_details: –î–µ—Ç–∞–ª–∏ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data MenuCallBack)
    :param cancel_possible: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - False
    :param cancel_page_address: –î–∞–Ω–Ω—ã–µ callback_data –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è
    :param search_possible: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - False
    :param search_cancel: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –ø–æ–∏—Å–∫–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - False
    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ä—Ç–µ–∂ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º, —Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)
    keyboard = create_keyboard_with_header(level=level, menu_name='vocabulary')

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–º–∞–º–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—é (—Å—Ä–µ–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã + –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–æ–ø—É—Å–∫)
    for text, value in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    keyboard.adjust(*sizes)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è callback_data –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    callback_data_next = MenuCallBack(       # 'menu:1:add_new_word:add_new_word:2', 'menu:2:vocabulary:select_topic:2'
        level=level, menu_name=menu_name, menu_details=menu_details, page=page + 1).pack()
    callback_data_previous = MenuCallBack(
        level=level, menu_name=menu_name, menu_details=menu_details, page=page - 1).pack()

    # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞ –∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è callback_data
    if (menu_details == 'tests_select_topic') or ('update_word_' in menu_details):
        callback_data_next = f'{menu_details}_page_{page + 1}'                  # –°—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç update_word_{id}_page_2
        callback_data_previous = f'{menu_details}_page_{page - 1}'              # –ò–ª–∏ tests_select_topic_page_2

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ç–µ–º
    keyboard = add_pagination_btns(keyboard, pagination_btns, callback_data_next, callback_data_previous)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞ —Ç–µ–º—ã –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ search_possible=True. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    if search_possible:
        keyboard = add_separate_line_with_btns(keyboard, {'–ù–∞–π—Ç–∏ —Ç–µ–º—É üîé': 'find_topic_by_matches'})

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –ø–æ–∏—Å–∫–∞ —Ç–µ–º—ã –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ search_cancel=True. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    if search_cancel:
        keyboard = add_separate_line_with_btns(keyboard, {'–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫ —Ç–µ–º—ã ‚úñÔ∏è': 'cancel_find_topic_by_matches'})

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ cancel_possible=True. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    if cancel_possible:
        keyboard = add_separate_line_with_btns(keyboard, {'–û—Ç–º–µ–Ω–∞ ‚ùå': cancel_page_address})

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.as_markup()


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞/—Ñ—Ä–∞–∑—ã WordPhrase
def add_new_or_edit_word_main_btns(
        *,
        btns: dict,                             # –ö–Ω–æ–ø–∫–∏ —Å callback_data –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
        level: int = 1,                         # –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥
        cancel_possible: bool = True,           # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –∏ —à–∞–≥–∞ –Ω–∞–∑–∞–¥
        cancel_page_address: str = None,        # –î–∞–Ω–Ω—ã–µ callback_data –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è
        pass_step: bool = False,                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞. –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ª–æ–≤–∞
        sizes: tuple[int, ...] = (1, 2)
) -> InlineKeyboardMarkup:                      # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞/—Ñ—Ä–∞–∑—ã WordPhrase.

    –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–µ–¥–µ—Ä + –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ (–ø—Ä–∏ —Ñ–ª–∞–≥–µ) + —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ (—Å –æ–ø—Ü–∏–µ–π –∑–∞–≥—Ä—É–∑–∫–∏
    value –≤ switch_inline_query_current_chat –ø—Ä–∏ text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ‚úèÔ∏è') + –±–ª–æ–∫ —Å –æ—Ç–º–µ–Ω–æ–π/—à–∞–≥–æ–º –Ω–∞–∑–∞–¥.

    :param btns: –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞ {text: callback_data, ...}
            –ü—Ä–∏ text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ‚úèÔ∏è' –≤–º–µ—Å—Ç–æ callback_data= –±—É–¥–µ—Ç switch_inline_query_current_chat= value
    :param level: –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω—é (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" –µ—Å–ª–∏ level > 1)
    :param cancel_possible: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –∏ —à–∞–≥–∞ –Ω–∞–∑–∞–¥
    :param cancel_page_address: –î–∞–Ω–Ω—ã–µ callback_data –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è
    :param pass_step: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞. –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ª–æ–≤–∞
    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ä—Ç–µ–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)
    keyboard = create_keyboard_with_header(level=level, menu_name='vocabulary')

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ" –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    if pass_step:
        keyboard.add(InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚ñ∂', callback_data='pass'))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—é
    for text, value in btns.items():

        # –î–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ‚úèÔ∏è" –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ value –≤ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –í–í–û–î
        if text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ‚úèÔ∏è':
            keyboard.add(InlineKeyboardButton(text=text, switch_inline_query_current_chat=value))
        else:
            keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞" –∏ "–®–∞–≥ –Ω–∞–∑–∞–¥" –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ cancel_possible=True. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    if cancel_possible:
        keyboard.add(InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞ ‚ùå', callback_data=cancel_page_address))
        keyboard.add(InlineKeyboardButton(text='–®–∞–≥ –Ω–∞–∑–∞–¥', callback_data='add_or_edit_word_step_back'))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.adjust(*sizes).as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
def get_kbds_tests_btns(level: int, menu_name: str, menu_details: str, topic_filter: int | None,
                        random_word: WordPhrase, sizes: tuple[int, ...]) -> InlineKeyboardMarkup:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤.

    :param level: –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω—é (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" –µ—Å–ª–∏ level > 1)
    :param menu_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data MenuCallBack)
    :param menu_details: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data MenuCallBack)
    :param topic_filter: id –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã –∏–ª–∏ None (–µ—Å–ª–∏ —Ç–µ–º–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞)
    :param random_word: –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –∑–∞–ø–∏—Å—å WordPhrase
    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ä—Ç–µ–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é üè†" –∏ "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è" (–µ—Å–ª–∏ level > 1)
    keyboard = create_keyboard_with_header(level=level, menu_name=menu_name)

    # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã/–æ—Ç–º–µ–Ω—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    if not topic_filter:
        topic_btn: dict = {'–í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É': 'tests_select_topic'}
    else:
        topic_btn: dict = {f'–¢–µ–º–∞: {random_word.topic.name} ‚úñ': 'tests_cancel_select_topic'}

    # –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
    btns = {
        '‚è™ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ': MenuCallBack(menu_name=menu_name, menu_details=f'{menu_details}_previous', level=2).pack(),
        '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è©': MenuCallBack(menu_name=menu_name, menu_details=menu_details, level=2).pack(),
        '–í–µ—Ä–Ω–æ ‚úÖ': f'tests_answer_correct',
        '–ù–µ–≤–µ—Ä–Ω–æ ‚ùå': f'tests_answer_wrong',
        'üéß –°–ª–æ–≤–æ/—Ñ—Ä–∞–∑–∞': f'speak_word_{random_word.id}',
        'üéß –ü—Ä–∏–º–µ—Ä—ã': f'speak_example_{random_word.id}',
        '–û—Ç–≤–µ—Ç ‚Ñπ': f'tests_ask_hint_{random_word.id}',
        **topic_btn,
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    for text, value in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=value))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    keyboard.adjust(*sizes)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.as_markup()


# –ì–∏–±–∫–æ–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ callback_data
def get_pagination_btns(
        pagination_btns: dict,   # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä–µ–º
        menu_details: str | None = None,
        page: int = 1,
        sizes: tuple[int, ...] = (2, ),
        custom_cb_data: str | None = None
) -> InlineKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–∏–±–∫–æ–≥–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ callback_data

    :param pagination_btns: –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    :param menu_details: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω—é (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data VocabularyCallBack).
                        –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω custom_cb_data
    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    :param sizes: –†–∞–∑–º–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ)
    :param custom_cb_data: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞ callback_data –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ f'{custom_cb_data}_page_{page + 1}'
    :return: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º callback_data
    if custom_cb_data:
        callback_data_next = f'{custom_cb_data}_page_{page + 1}'
        callback_data_previous = f'{custom_cb_data}_page_{page - 1}'
    else:
        callback_data_next = VocabularyCallBack(page=page + 1, menu_name=menu_details).pack()
        callback_data_previous = VocabularyCallBack(page=page - 1, menu_name=menu_details).pack()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    keyboard = InlineKeyboardBuilder()
    keyboard = add_pagination_btns(keyboard, pagination_btns, callback_data_next, callback_data_previous)

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard.adjust(*sizes).as_markup()
