"""
–î–µ–π—Å—Ç–≤–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
- –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π + + –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–≤–æ–¥–Ω–æ–≥–æ .xls-—Ñ–∞–π–ª–∞ —Å –ø–æ–ø—ã—Ç–∫–∞–º–∏ Attempt –∏ –æ—Ç—á—ë—Ç–∞–º–∏ Report;
    - –≤—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ .xls-—Ñ–∞–π–ª (—Å–ª–æ–≤–∞—Ä—å + –∑–∞–º–µ—Ç–∫–∏ + –æ—Ç—á—ë—Ç—ã);
    - –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è + –∏—Ö –≤—ã–≥—Ä—É–∑–∫–∞ –≤ .zip-–∞—Ä—Ö–∏–≤;
- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ - –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏;
- –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è.

INFO:
1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ menu_processing.py.
2. –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å (–∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Sign in) –≤ state —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–ª—é—á user=<User object> –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
   –∫ –¥–∞–Ω–Ω—ã–º.
3. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ (–≥–æ–ª–æ—Å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏). –í —Ä–µ–∂–∏–º–µ 'random' –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
   –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–π –≥–æ–ª–æ—Å (–∏–∑ —Å–ø–∏—Å–∫–∞ all_voices_en_US_ShortName_list).
4. –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∞—É–¥–∏–æ –≤ state –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫–ª—é—á–∏:
    - 'last_date_page' - callback.data –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –¥–∞—Ç–∞–º–∏ –∞—É–¥–∏–æ (–¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥")
    - 'audios_by_date_page' - callback.data –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∞—É–¥–∏–æ (–¥–ª—è callback.data –∫–Ω–æ–ø–æ–∫)
"""
import os
import re
import zipfile
from tempfile import NamedTemporaryFile

from aiogram import Router, F, types
from aiogram.types import FSInputFile
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from app.banners import banners_details as bnr
from app.database.db import DataBase
from app.filters.custom_filters import ChatTypeFilter, IsKeyInStateFilter
from app.keyboards.inlines import get_inline_btns, get_kbds_with_navi_header_btns, get_pagination_btns
from app.common.fsm_classes import UserSettingsFSM
from app.common.tools import try_alert_msg, clear_auxiliary_msgs_in_chat, modify_callback_data
from app.common.msg_templates import report_msg_template, oops_with_error_msg_template, oops_try_again_msg_template
from app.utils.custom_bot_class import Bot
from app.utils.paginator import Paginator, pages
from app.utils.tts import speak_text
from app.utils.tts_voices import all_voices_en_US_ShortName_list
from app.utils.xsl_tools import export_statistic_data_to_xls, export_all_user_data_to_xls
from app.settings import PER_PAGE_STAT_REPORTS, PATTERN_SPEECH_RATE, PER_PAGE_VOICE_SAMPLES, VOICE_SAMPLES_TEXT, \
    PER_PAGE_AUDIO_DATES, SAVED_AUDIO_ROOT_DIR, PER_PAGE_AUDIOS, FILENAME_AUDIOS_ZIP, FILENAME_AUDIOS_CAPTION

# –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
profile_router = Router()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä, —á—Ç–æ —Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç
profile_router.message.filter(ChatTypeFilter(['private']))


# USER SETTINGS

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
@profile_router.callback_query(F.data == 'user_settings', IsKeyInStateFilter('user'))
async def show_user_settings(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) -> None:
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "user_settings"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    state_data = await state.get_data()
    user = state_data.get('user')

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –ë–î –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    settings_data = await DataBase.get_user_settings(session, user.id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è
    btns = {
        'üîπ –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏': 'change_speech_rate',
        'üîπ –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å': 'change_voice_page_1',
    }
    kbds = get_kbds_with_navi_header_btns(btns=btns, level=2, menu_name='auth', sizes=(2, 1))
    bot.reply_markup_save[callback.message.chat.id] = kbds

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–∞–Ω–Ω–µ—Ä –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    caption = bnr.user_profile_settings.format(
        email=user.email, speech_rate=settings_data.speech_rate, voice=settings_data.voice
    )
    await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(caption=caption, reply_markup=kbds)


# –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ - –®–ê–ì 1, –∑–∞–ø—Ä–æ—Å –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
@profile_router.callback_query(F.data == 'change_speech_rate', IsKeyInStateFilter('user'))
async def change_speech_rate_ask_value(callback: types.CallbackQuery, state: FSMContext, bot: Bot) -> None:
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ—á–∏, –®–ê–ì 1. –ó–∞–ø—Ä–æ—Å –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "change_speech_rate"
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """
    bot.auxiliary_msgs['cbq'][callback.message.chat.id] = callback

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π
    msg_text = ("<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏</b>\n\n"
                "–°–∫–æ—Ä–æ—Å—Ç—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö: –æ—Ç '-100%'(–æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ) –¥–æ '+100%'(–æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ).\n\n" 
                "–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ <i>(–±–µ–∑ '%', —Ç–æ–ª—å–∫–æ –∑–Ω–∞–∫ –∏ —á–∏—Å–ª–æ, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞)</i>\n"
                "–î–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ—á–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ '+0'.\n\n"
                )
    kbds = get_inline_btns(btns={'–û—Ç–º–µ–Ω–∞ ‚ùå': 'cancel_user_settings'})
    msg = await callback.message.answer(msg_text, reply_markup=kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏
    await state.set_state(UserSettingsFSM.speech_rate)


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è.
@profile_router.callback_query(F.data == 'cancel_user_settings', IsKeyInStateFilter('user'))
async def cancel_user_settings_update(callback: types.CallbackQuery, state: FSMContext, bot: Bot) -> None:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è. –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ –∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "cancel_user_settings"
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """
    await state.set_state(None)                                                     # –°–±—Ä–∞—Å—ã–≤–∞–µ–º state
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)               # –£–¥–∞–ª—è–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è


# –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ - –®–ê–ì 2, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
@profile_router.message(UserSettingsFSM.speech_rate, IsKeyInStateFilter('user'))
async def change_speech_rate_get_value(
        message: types.Message, session: AsyncSession, state: FSMContext, bot: Bot) -> None:
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ—á–∏, –®–ê–ì 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

    :param message: –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ
    bot.auxiliary_msgs['user_msgs'][message.chat.id].append(message)

    # –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    state_data = await state.get_data()
    user = state_data.get('user')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –≤—ã—Ö–æ–¥–∏–º –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if not re.match(PATTERN_SPEECH_RATE, message.text):
        msg_text = '‚ö†Ô∏è –£–ø—Å! –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥'
        await try_alert_msg(bot, message.chat.id, msg_text, if_error_send_msg=True)
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    is_updated = await DataBase.update_user_settings(session, user.id, speech_rate=f'{message.text}%')

    # –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä
    if is_updated:
        await try_alert_msg(bot, message.chat.id, f'‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã!')
        settings_data = await DataBase.get_user_settings(session, user.id)
        caption = bnr.user_profile_settings.format(
            email=user.email, speech_rate=settings_data.speech_rate, voice=settings_data.voice
        )
        await bot.auxiliary_msgs['cbq_msg'][message.chat.id].edit_caption(
            caption=caption, reply_markup=bot.reply_markup_save[message.chat.id]
        )

    # –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    else:
        msg_text = oops_try_again_msg_template
        await try_alert_msg(bot, message.chat.id, msg_text, if_error_send_msg=True)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –∏ —É–¥–∞–ª—è–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(None)
    await clear_auxiliary_msgs_in_chat(bot, message.chat.id)


# –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å - –®–ê–ì 1, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑—Ü–æ–≤ –≥–æ–ª–æ—Å–æ–≤ –æ–∑–≤—É—á–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
@profile_router.callback_query(F.data.contains('change_voice_page_'), IsKeyInStateFilter('user'))
async def change_voice_ask_value(callback: types.CallbackQuery, bot: Bot) -> None:
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –æ–∑–≤—É—á–∫–∏ –∞—É–¥–∏–æ - –®–ê–ì 1, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑—Ü–æ–≤ –≥–æ–ª–æ—Å–æ–≤ –æ–∑–≤—É—á–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "change_voice", "change_voice_page_<page_number>"
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """
    bot.auxiliary_msgs['cbq'][callback.message.chat.id] = callback

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ callback
    page = int(callback.data.split('_')[-1])

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º —Å—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    per_page = PER_PAGE_VOICE_SAMPLES
    paginator = Paginator(list(all_voices_en_US_ShortName_list), page=page, per_page=per_page)
    voices_on_current_page: list = paginator.get_page()

    # –û—á–∏—â–∞–µ–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    #  –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π, —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ä–∞–∑–Ω–æ–≥–æ–ª–æ—Å–æ–π –æ–∑–≤—É—á–∫–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    info_msg_text = (f'<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞.\n\n</b>–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –æ–∑–≤—É—á–∫–∏ —Ä–∞–∑–Ω—ã–º–∏ –≥–æ–ª–æ—Å–∞–º–∏ '
                     f'–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≥–æ–ª–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:\n')
    btns = {'‚ú® –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–Ω–æ–≥–æ–ª–æ—Å—É—é –æ–∑–≤—É—á–∫—É': 'apply_voice:random', '–û—Ç–º–µ–Ω–∞ ‚ùå': 'cancel_user_settings'}
    kbds = get_inline_btns(btns=btns, sizes=(1, ))
    msg = await callback.message.answer(text=info_msg_text, reply_markup=kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for voice in voices_on_current_page:
        msg = await callback.message.answer(
            text=voice,
            reply_markup=get_inline_btns(btns={
                'üéß –ü—Ä–æ—Å–ª—É—à–∞—Ç—å': f'play_voice:{voice}',
                '–ü—Ä–∏–º–µ–Ω–∏—Ç—å ‚úÖ': f'apply_voice:{voice}',
            })
        )
        bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    voices_count = len(all_voices_en_US_ShortName_list)                         # –í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤
    first_voice: int = ((page - 1) * per_page) + 1                              # –ù–æ–º–µ—Ä –ø–µ—Ä–≤–æ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–π –∑–∞–ø–∏—Å–∏
    last_voice: int = len(voices_on_current_page) - 1 + first_voice             # –ù–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–π –∑–∞–ø–∏—Å–∏
    pagi_kbds = get_pagination_btns(page=page, pagination_btns=pages(paginator), custom_cb_data='change_voice')
    info_msg_text = f'<b>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:</b> {voices_count}\n' \
                    f'<b>–ü–æ–∫–∞–∑–∞–Ω—ã –∑–∞–ø–∏—Å–∏:</b> {first_voice} - {last_voice}'
    msg = await callback.message.answer(text=info_msg_text, reply_markup=pagi_kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)


# –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å - –®–ê–ì 1.5, –ø—Ä–æ—Å–ª—É—à–∞—Ç—å –æ–±—Ä–∞–∑–µ—Ü –≥–æ–ª–æ—Å–∞
@profile_router.callback_query(F.data.contains('play_voice:'), IsKeyInStateFilter('user'))
async def play_voice_sample(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) -> None:
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –æ–∑–≤—É—á–∫–∏ –∞—É–¥–∏–æ - –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–∞ –≥–æ–ª–æ—Å–∞.
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –æ–±—Ä–∞–∑–µ—Ü –∞—É–¥–∏–æ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥).

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "play_voice:<voice_name>"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –ó–∞–±–∏—Ä–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–∑–≤—É—á–∫–∏ –∏–∑ callback
    voice_name = callback.data.split(':')[1]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —Å –æ–±—Ä–∞–∑—Ü–æ–º –≤ —á–∞—Ç
    text_to_speak = f'{VOICE_SAMPLES_TEXT}. {voice_name.split("-")[-1]}'
    await speak_text(
        text_to_speak, bot, callback.message.chat.id, is_with_title=False,
        state=state, session=session, test_voice=voice_name
    )


# –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å - –®–ê–ì 2, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–∞
@profile_router.callback_query(F.data.contains('apply_voice:'), IsKeyInStateFilter('user'))
async def change_voice_get_value(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) \
        -> None:
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –æ–∑–≤—É—á–∫–∏ –∞—É–¥–∏–æ - –®–ê–ì 2. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–∞ –≤ –±–∞–∑–µ.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "apply_voice:<voice_name>"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –ó–∞–±–∏—Ä–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–∑–≤—É—á–∫–∏ –∏–∑ callback
    voice_name = callback.data.split(':')[1]

    # –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    state_data = await state.get_data()
    user = state_data.get('user')

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ UserSettings
    try:
        is_updated = await DataBase.update_user_settings(session, user.id, voice=voice_name)
    except (Exception, ) as e:
        await callback.answer(text=oops_with_error_msg_template.format(error=str(e)), show_alert=True)
        return

    # –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∏ –æ—á–∏—â–∞–µ–º —á–∞—Ç
    if is_updated:
        await callback.answer(text='‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã!', show_alert=True)
        await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

        settings_data = await DataBase.get_user_settings(session, user.id)
        caption = bnr.user_profile_settings.format(
            email=user.email, speech_rate=settings_data.speech_rate, voice=settings_data.voice
        )
        await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(
            caption=caption, reply_markup=bot.reply_markup_save[callback.message.chat.id]
        )
    else:
        await callback.answer(text=oops_try_again_msg_template, show_alert=True)


# STATISTIC & DATA

# –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–∞–Ω–Ω—ã–µ"
@profile_router.callback_query(F.data.startswith('user_stat_and_data'), IsKeyInStateFilter('user'))
async def show_user_stat_and_data(callback: types.CallbackQuery, state: FSMContext, bot: Bot) -> None:
    """
    –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–∞–Ω–Ω—ã–µ".
    –î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –∏ –≤—ã–≥—Ä—É–∑–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "user_stat_and_data"
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–æ–º "user" —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –û—á–∏—â–∞–µ–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    state_data = await state.get_data()
    user = state_data.get('user')

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    caption = bnr.user_profile_data.format(email=user.email)
    btns = {
        '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π üìä': 'statistic_page_1',
        '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ üéô': 'user_audios_page_1',
        '–í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è .xls üíæ': 'export_all_user_data'
    }
    kbds = get_kbds_with_navi_header_btns(level=2, menu_name='auth', btns=btns, sizes=(2, 1))
    try:
        await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(caption=caption, reply_markup=kbds)
    except (Exception,) as e:
        print(e)


# –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–æ–≤ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ + –≤—ã–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@profile_router.callback_query(F.data.startswith('statistic_page_'), IsKeyInStateFilter('user'))
async def show_statistic_reports(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) \
        -> None:
    """
    –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–æ–≤ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ + –≤—ã–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "statistic_page_<page_number>"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–∞–º–∏ user –∏ all_user_reports(–ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –û—á–∏—â–∞–µ–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –æ—Ç—á—ë—Ç–∞—Ö (–ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)
    state_data = await state.get_data()
    user = state_data.get('user')
    all_user_reports = state_data.get('all_user_reports')

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ callback —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞)
    await state.update_data(show_statistic_reports_cbq=callback.data)

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    caption = bnr.user_profile_stat.format(email=user.email)
    btns = {
        '–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç .xls üìä': 'create_statistic_report',
    }
    custom_step_back = 'user_stat_and_data'
    kbds = get_kbds_with_navi_header_btns(
        level=3, menu_name='auth', btns=btns, sizes=(2, 1), custom_step_back=custom_step_back
    )
    try:
        await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(caption=caption, reply_markup=kbds)
    except (Exception,) as e:
        print(e)

    # –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Ä–∞–∑–¥–µ–ª –∑–∞–±–∏—Ä–∞–µ–º –æ—Ç—á—ë—Ç—ã –∏–∑ –ë–î –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–¥ –∫–ª—é—á–æ–º all_user_reports=
    if not all_user_reports:
        all_user_reports = await DataBase.get_user_reports(session, user_id=user.id, is_desc=True)
        await state.update_data(all_user_reports=all_user_reports)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ callback
    page = int(callback.data.split('_')[-1])

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    per_page = PER_PAGE_STAT_REPORTS
    paginator = Paginator(list(all_user_reports), page=page, per_page=per_page)
    reports_on_current_page: list = paginator.get_page()

    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—á–µ—Ç—á–∏–∫ –æ—Ç—á—ë—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (ID –∏–∑ –ë–î –æ–±—â–µ–µ –¥–ª—è –≤—Å–µ—Ö Users)
    reports_total = len(all_user_reports)
    user_report_id = reports_total - (per_page * (page - 1))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    first_report: int = ((page - 1) * per_page) + 1
    last_report: int = len(reports_on_current_page) - 1 + first_report
    msg_text = f'<b>–í—Å–µ–≥–æ –æ—Ç—á—ë—Ç–æ–≤:</b> {reports_total}\n<b>–ü–æ–∫–∞–∑–∞–Ω—ã –æ—Ç—á—ë—Ç—ã:</b> {first_report} - {last_report}\n'
    pagi_kbds = get_pagination_btns(pagination_btns=pages(paginator), page=page, custom_cb_data='statistic')
    msg = await callback.message.answer(text=msg_text, reply_markup=pagi_kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç—á—ë—Ç–∞–º–∏
    for report in reports_on_current_page:
        topic_name = report.topic_name if report.topic_name else '-'
        msg = await callback.message.answer(
            text=report_msg_template.format(
                report_number=user_report_id, report_date=report.created, test_type=report.test_type,
                topic_name=topic_name, total_attempts=report.total_attempts, correct_attempts=report.correct_attempts,
                total_words=report.total_words, result_percentage=report.result_percentage)
        )
        bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)
        user_report_id -= 1

    # –î—É–±–ª–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    msg = await callback.message.answer(text=msg_text, reply_markup=pagi_kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)


# –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç .xls —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏–ª–∏ –ø–æ–ª–Ω—É—é –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(—Å–ª–æ–≤–∞—Ä—å + –∑–∞–º–µ—Ç–∫–∏ + –æ—Ç—á—ë—Ç—ã)
@profile_router.callback_query(F.data.startswith('create_statistic_report') | F.data.startswith('export_all_user_data'),
                               IsKeyInStateFilter('user'))
async def create_statistic_report(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) \
        -> None:
    """
    –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç .xls —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –æ—Ç—á—ë—Ç–æ–≤ Report –∏ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ Attempt.

    :param callback: Callback-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "create_statistic_report"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–∞–º–∏ user, all_user_reports –∏ show_statistic_reports_cbq
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –ß–∏—Å—Ç–∏–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –æ—Ç—á—ë—Ç–∞—Ö Report –∏ callback_data –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    state_data = await state.get_data()
    user = state_data.get('user')
    all_user_reports = state_data.get('all_user_reports')
    last_page = state_data.get('show_statistic_reports_cbq')

    # –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç .xls —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    all_user_reports = list(all_user_reports)
    all_user_reports.reverse()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π xlsx-—Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–ø—Ä–æ—Å–∞ –≤ callback
    path_to_file = ''
    if callback.data == 'create_statistic_report':
        path_to_file = await export_statistic_data_to_xls(session, user.id, all_user_reports)
    elif callback.data == 'export_all_user_data':
        chat_id = callback.message.chat.id
        path_to_file = await export_all_user_data_to_xls(session, bot, chat_id, user.id, all_user_reports)
        last_page = 'user_stat_and_data'

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –≤ —á–∞—Ç
    with open(path_to_file, 'rb') as f:
        data_file = types.BufferedInputFile(f.read(), filename=os.path.basename(path_to_file))
    kbds = get_inline_btns(btns={'–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –¥–∞–Ω–Ω—ã—Ö?': last_page})
    msg = await bot.send_document(chat_id=callback.message.chat.id, document=data_file, reply_markup=kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –£–¥–∞–ª—è–µ–º xlsx-—Ñ–∞–π–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(path_to_file)


# AUDIOS

# –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏". –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –¥–∞—Ç —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –∞—É–¥–∏–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–∞–º
@profile_router.callback_query(F.data.startswith('user_audios_page_'), IsKeyInStateFilter('user'))
async def user_audios(callback: types.CallbackQuery, bot: Bot, session: AsyncSession, state: FSMContext) -> None:
    """
    –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏". –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –¥–∞—Ç —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –∞—É–¥–∏–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–∞–º.

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "user_audios_page_<page_number>"
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–æ–º 'user'
    :return: None
    """
    bot.auxiliary_msgs['cbq'][callback.message.chat.id] = callback

    # –ß–∏—Å—Ç–∏–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    state_data = await state.get_data()
    user = state_data.get('user')

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ state –∞–¥—Ä–µ—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –¥–∞—Ç–∞–º–∏ –∞—É–¥–∏–æ (–¥–ª—è custom_step_back –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥")
    await state.update_data(last_date_page=callback.data)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∞—Ç —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –∞—É–¥–∏–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–∞–º
    all_audio_dates_and_count = await DataBase.get_audio_dates_and_count(session, user.id)
    all_dates = [i[0] for i in all_audio_dates_and_count]                            # –°–ø–∏—Å–æ–∫ –¥–∞—Ç
    date_count_dict = {date: count for date, count in all_audio_dates_and_count}     # –°–ª–æ–≤–∞—Ä—å –¥–∞—Ç–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    caption = bnr.user_profile_all_audio_dates.format(email=user.email)
    btns = {
        '–í—ã–≥—Ä—É–∑–∏—Ç—å –∞—Ä—Ö–∏–≤ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π üíæ': 'export_all_user_audios'
    }
    custom_step_back = 'user_stat_and_data'
    kbds = get_kbds_with_navi_header_btns(
        level=3, menu_name='auth', btns=btns, sizes=(2, 1), custom_step_back=custom_step_back
    )
    try:
        await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(caption=caption, reply_markup=kbds)
    except (Exception,) as e:
        print(e)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    if len(all_audio_dates_and_count) == 0:
        await callback.answer('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π!', show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ callback
    page = int(callback.data.split('_')[-1])

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ä–µ–∑ –¥–∞—Ç –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    paginator = Paginator(list(all_dates), page, per_page=PER_PAGE_AUDIO_DATES)
    current_page_dates = paginator.get_page()

    # –î–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–∞—Ç–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–ø–∏—Å–µ–π –∏ –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
    for date in current_page_dates:
        kbds = get_inline_btns(btns={'üéß –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—è–º': f'audio_records_{date}_page_1'})
        msg_text = f"üìÖ <b>–î–∞—Ç–∞:</b> {date}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {date_count_dict[date]}"
        msg = await callback.message.answer(text=msg_text, reply_markup=kbds)
        bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    pagi_kbds = get_pagination_btns(page=page, pagination_btns=pages(paginator), custom_cb_data='user_audios')
    msg_text = '–í—Å–µ–≥–æ –¥–∞—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π: <b>{}</b>.\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ <b>{}</b> –∏–∑ <b>{}</b>'
    msg_text = msg_text.format(len(all_dates), page, paginator.pages)
    msg = await callback.message.answer(text=msg_text, reply_markup=pagi_kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)


# –ü—Ä–æ—Å–º–æ—Ç—Ä –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É.
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏
@profile_router.callback_query(F.data.startswith('audio_records_'), IsKeyInStateFilter('user', 'last_date_page'))
async def audio_by_date(callback: types.CallbackQuery, bot: Bot, session: AsyncSession, state: FSMContext) -> None:
    """
    –ü—Ä–æ—Å–º–æ—Ç—Ä –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É. –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –≤—Å–µ –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã.
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏.

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "audio_records_<date>_page_<page_number>"
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–∞–º–∏:
                  'user'(<User_object>) –∏ 'last_date_page'(callback.data –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥)
    :return: None
    """

    # –ß–∏—Å—Ç–∏–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ
    state_data = await state.get_data()
    user = state_data.get('user')
    last_date_page = state_data.get('last_date_page')

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏ (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ callback-–¥–∞–Ω–Ω—ã—Ö)
    await state.update_data(audios_by_date_page=callback.data)

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –¥–∞—Ç—É –∏–∑ callback
    page = int(callback.data.split('_')[-1])
    date = callback.data.split('_')[2]                                              # 2025-05-08

    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    caption = bnr.user_profile_audio_by_date.format(email=user.email, date=date)
    btns = {
        '–í—ã–≥—Ä—É–∑–∏—Ç—å –∞—Ä—Ö–∏–≤ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π üíæ': 'export_all_user_audios'
    }
    kbds = get_kbds_with_navi_header_btns(
        level=3, menu_name='auth', btns=btns, sizes=(2, 1), custom_step_back=last_date_page
    )
    try:
        await bot.auxiliary_msgs['cbq_msg'][callback.message.chat.id].edit_caption(caption=caption, reply_markup=kbds)
    except (Exception, ) as e:
        print(e)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É (–ø—É—Ç–∏ –∏–∑ –ë–î)
    all_saved_audios = await DataBase.get_all_saved_audios(session, user.id, filter_date=date)

    # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–µ–π –∑–∞ –¥–∞—Ç—É –±–æ–ª—å—à–µ –Ω–µ—Ç, –æ–ø–æ–≤–µ—â–∞–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    if len(all_saved_audios) == 0:
        msg = await callback.message.answer('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –∑–∞ —ç—Ç—É –¥–∞—Ç—É!')
        bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ä–µ–∑ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    paginator = Paginator(list(all_saved_audios), page, per_page=PER_PAGE_AUDIOS)
    current_page_data = paginator.get_page()

    # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if len(current_page_data) == 0:
        page = page - 1
        paginator = Paginator(list(all_saved_audios), page, per_page=PER_PAGE_AUDIOS)
        current_page_data = paginator.get_page()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –≤ —á–∞—Ç
    for audio_obj in current_page_data:
        try:
            audio = FSInputFile(path=audio_obj.file_path)
            kbds = get_inline_btns(btns={'–£–¥–∞–ª–∏—Ç—å üóë': f'delete_audio:{audio_obj.id}'})
            msg = await callback.message.answer_audio(
                audio=audio,
                caption=f"–ê—É–¥–∏–æ {audio_obj.created.date().isoformat()}",
                reply_markup=kbds
            )
            bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)
        except Exception as e:
            print(e)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    pagi_kbds = get_pagination_btns(page=page, pagination_btns=pages(paginator), custom_cb_data=f'audio_records_{date}')
    msg_text = '–í—Å–µ–≥–æ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π: <b>{}</b>.\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ <b>{}</b> –∏–∑ <b>{}</b>'
    msg_text = msg_text.format(len(all_saved_audios), page, paginator.pages)
    msg = await callback.message.answer(text=msg_text, reply_markup=pagi_kbds)
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)


# –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ, –®–ê–ì 1 - –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
@profile_router.callback_query(F.data.startswith('delete_audio:'), IsKeyInStateFilter('user', 'audios_by_date_page'))
async def delete_audio_ask_to_confirm(callback: types.CallbackQuery, state: FSMContext, bot: Bot) -> None:
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏, –®–ê–ì 1 - –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "delete_audio:<SavedAudio.id>"
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–∞–º–∏:
                  'user' (—Å –æ–±—ä–µ–∫—Ç–æ–º User) –∏ 'audios_by_date_page' (—Å callback.data –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–¥–∞–ª–µ–Ω–∏—è)
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –û—á–∏—â–∞–µ–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ
    state_data = await state.get_data()
    audios_by_date_page = state_data.get('audios_by_date_page')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    btns = {
        '–£–¥–∞–ª–∏—Ç—å üóë': f'confirm_delete_audio:{callback.data.split(":")[-1]}',
        '–û—Ç–º–µ–Ω–∞ ‚ùå': audios_by_date_page
    }
    msg = await callback.message.answer(
        text='‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å?',
        reply_markup=get_inline_btns(btns=btns)
    )
    bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)


# –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ, –®–ê–ì 2 - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –ë–î
@profile_router.callback_query(F.data.startswith('confirm_delete_audio:'),
                               IsKeyInStateFilter('user', 'audios_by_date_page'))
async def confirm_delete_audio(callback: types.CallbackQuery, session: AsyncSession, state: FSMContext, bot: Bot) \
        -> None:
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ, –®–ê–ì 2 - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –ë–î

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ "confirm_delete_audio:<audio_id>"
    :param session: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–∞–º–∏:
                  'user' (—Å –æ–±—ä–µ–∫—Ç–æ–º User) –∏ 'audios_by_date_page' (—Å callback.data —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—è–º–∏)
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """
    bot.auxiliary_msgs['cbq'][callback.message.chat.id] = callback

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ
    state_data = await state.get_data()
    audios_by_date_page = state_data.get('audios_by_date_page')                 # 'audio_records_2025-05-07_page_2'

    # –ó–∞–±–∏—Ä–∞–µ–º SavedAudio.id –∏–∑ callback
    audio_id = int(callback.data.split(':')[-1])

    # –£–¥–∞–ª—è–µ–º –∞—É–¥–∏–æ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–ø–∏—Å—å –æ –Ω–µ–º –∏–∑ –ë–î
    is_del = False                                                              # –§–ª–∞–≥ —É–¥–∞–ª–µ–Ω–∏—è
    try:
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ–± –∞—É–¥–∏–æ –∏–∑ –ë–î
        path_for_delete = await DataBase.delete_audio_by_id(session, audio_id)
        if path_for_delete:
            try:
                # –£–¥–∞–ª—è–µ–º –∞—É–¥–∏–æ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
                os.remove(path_for_delete)
                is_del = True
            except Exception as e:
                await callback.answer(text=oops_with_error_msg_template.format(error=str(e)), show_alert=True)
    except Exception as e:
        await callback.answer(text=oops_with_error_msg_template.format(error=str(e)), show_alert=True)

    # –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if is_del:
        await callback.answer(text='‚úÖ –ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞!', show_alert=True)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—è–º–∏
    modified_callback = await modify_callback_data(callback, audios_by_date_page)
    await audio_by_date(modified_callback, bot, session, state)


# –í—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ zip-–∞—Ä—Ö–∏–≤ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫)
@profile_router.callback_query(F.data.startswith('export_all_user_audios'), IsKeyInStateFilter('user'))
async def export_all_user_audios(callback: types.CallbackQuery, state: FSMContext, bot: Bot) -> None:
    """
    –í—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ zip-–∞—Ä—Ö–∏–≤ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫).

    :param callback: CallbackQuery-–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∞ 'export_all_user_audios'
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM —Å –∫–ª—é—á–æ–º 'user' —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ User
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :return: None
    """

    # –û—á–∏—â–∞–µ–º —á–∞—Ç
    await clear_auxiliary_msgs_in_chat(bot, callback.message.chat.id)

    # –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    state_data = await state.get_data()
    user = state_data.get('user')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—è–º–∏
    try:

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –¥–æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ —Å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_audio_root = SAVED_AUDIO_ROOT_DIR.format(user_id=user.id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
        if not os.path.exists(user_audio_root):
            await callback.answer(text='‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π!', show_alert=True)
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –¥–∞—Ç–∞–º–∏. –ò—Å–∫–ª—é—á–∞–µ–º –ø–∞–ø–∫—É —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        all_audio_dirs = os.listdir(user_audio_root)  # ['2025-05-05', '2025-05-06', ... , 'tmp']
        if 'tmp' in all_audio_dirs:
            all_audio_dirs.remove('tmp')

    except Exception as e:
        await callback.answer(text=oops_with_error_msg_template.format(error=str(e)), show_alert=True)
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤
    files = None                                                      # –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –≤ –∞—Ä—Ö–∏–≤–µ
    with NamedTemporaryFile(delete=False, suffix=".zip") as tmp_zip:  # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π zip-—Ñ–∞–π–ª
        with zipfile.ZipFile(tmp_zip.name, "w") as archive:

            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç–∏ –¥–æ –∫–∞–∂–¥–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –≤ –∫–∞–∂–¥–æ–π –¥–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            for date_dir in all_audio_dirs:
                date_dir_path = os.path.join(user_audio_root, date_dir)
                for file_name in os.listdir(date_dir_path):
                    audio_path = os.path.join(date_dir_path, file_name)
                    files = True

                    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ –∞—Ä—Ö–∏–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
                    arcname = os.path.join(date_dir, file_name)
                    archive.write(audio_path, arcname=arcname)

            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π, –æ–ø–æ–≤–µ—â–∞–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
            if not files:
                await callback.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏!", show_alert=True)
                return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤ –≤ —á–∞—Ç –±–æ—Ç–∞
        file_to_send = FSInputFile(tmp_zip.name, filename=FILENAME_AUDIOS_ZIP)
        msg = await callback.message.answer_document(file_to_send, caption=FILENAME_AUDIOS_CAPTION)
        bot.auxiliary_msgs['user_msgs'][callback.message.chat.id].append(msg)

    # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(tmp_zip.name)
